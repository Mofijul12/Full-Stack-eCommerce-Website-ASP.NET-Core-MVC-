@model IEnumerable<AuthTest_RoleBased.Models.Order>

@using Microsoft.AspNetCore.Identity
@inject UserManager<AuthTest_RoleBased.Data.ApplicationUser> UserManager
@inject SignInManager<AuthTest_RoleBased.Data.ApplicationUser> SignInManager

@{
    ViewData["Title"] = $"Orders for {ViewBag.UserName}";
}

<div class="container mt-4">
    <h2 class="mb-4">@ViewData["Title"]</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-info">No orders found for this user.</div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-hover table-bordered align-middle">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">Order ID</th>
                        <th scope="col">Date</th>
                        <th>Delivery Address</th>
                        <th>Cellphone Number</th>
                        <th scope="col">Status</th>
                        <th scope="col">Items</th>
                        <th scope="col">Total</th>
                        @* <th scope="col">Actions</th> *@
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model)
                    {
                        <tr>
                            <td>@order.OrderId</td>
                            <td>@order.OrderDate.ToString("dd MMM yyyy")</td>
                            <td>@order.User.Country</td>
                            <td>@order.User.CellPhone</td>
                            <td>
                                @if (User.IsInRole("ADMIN")|| User.IsInRole("MANAGER"))
                                {
                                    <form asp-action="UpdateOrderStatus" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="id" value="@order.OrderId" />
                                        <select name="status" class="form-select form-select-sm" onchange="this.form.submit()">
                                            <option value="Pending" selected="@("Pending" == order.Status)">Pending</option>
                                            <option value="Shipped" selected="@("Shipped" == order.Status)">Shipped</option>
                                            <option value="Delivered" selected="@("Delivered" == order.Status)">Delivered</option>
                                            <option value="Cancelled" selected="@("Cancelled" == order.Status)">Cancelled</option>
                                        </select>
                                    </form>
                                }
                                else
                                {
                                    <span class="badge
                                        @(order.Status == "Pending" ? "bg-warning text-dark" :
                                          order.Status == "Shipped" ? "bg-primary text-light" :
                                          order.Status == "Delivered" ? "bg-success text-light" :
                                          order.Status == "Cancelled" ? "bg-danger text-light" :
                                          "bg-secondary")">
                                        @order.Status
                                    </span>
                                }
                            </td>
                            <td>
                                <ul class="mb-0 ps-3">
                                    @foreach (var item in order.OrderItems)
                                    {
                                        <li>
                                            <strong>@item.Product.Name</strong><br />
                                            Qty: @item.Quantity, Price: @item.Price.ToString("C")
                                        </li>
                                    }
                                </ul>
                            </td>
                            <td>@order.OrderItems.Sum(i => i.Quantity * i.Price).ToString("C")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>
